
Задание №1 
Машина на CentOS 7
1) Создайте виртуальную машину в Vagrant с образом CentOS 7, используя данный образ https://app.vagrantup.com/bento/boxes/centos-7.5.

2) Обратите внимание на вывод Vagrant при создании этой машины. Какие отличия от Ubuntu вы видите?

3) После создания остановите и удалите виртуальную машину

Зададние №2
Редирект
Используя атрибут location сделайте редирект на google.com со страницы /wantgoogle/. localhost:8080/wantgoogle/
Что изменится в файле конфигурации, относительно базового файла?
Подсказка: proxy_pass работает, в том числе и на веб сайты.

Важно: Не забывайте про команды nginx -s reload и nginx -t. Первая перезагрузит конфигурации в nginx, вторая скажет вам верные ли они.

Задание №3
Вывод данных из БД
Задание повышенной сложности.

Используя команды CREATE DATABASE, CREATE TABLE создайте базу данных business_db и таблицу important_data в MySQL со следующей структурой.

CREATE TABLE important_data (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) );
Используя PHP соединитесь с базой данных, с помощью запроса.

SELECT * FROM important_data;
и скрипта test-connection.php выведите данные. php-test.com:8080/test-connection.php
Как изменится скрипт test-connection.php? .


############################################################################################
<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Выполнение домашнего задания >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
############################################################################################

Описание моей рабочей среды:


Этап первый "Подготовка"
1 Скачиваем VirtualBox  с официалльного сайта https://www.virtualbox.org/wiki/Downloads
    Так как у меня установлено в качестве Операционной системы Ubuntu 20.04.3, я просто выполняю
    установку через менеджер пакетов APT, командой #sudo apt install virtualbox -у. 
    Ожидаем окончание установки. 
2 Скачиваем Vagrant c офицмального сайта https://www.vagrantup.com/?_gl=1*1hqdlka*_ga*MjAwNzc0NjE3OS4xNjYxODgxNTU3*_ga_P7S46ZYEKW*MTY2MTg5NjExMC4zLjEuMTY2MTg5NjE4OC4wLjAuMA..
    По причине указанной выше я использую менеджер пакетов # sudo apt install vagrant -y.
    Ожидаем окончане установки.
3 Создаем директорию для нашего проекта # mkdir ~/project 
4 Заходим в нее # cd ~/project

Зададние №1
Этап второй "Создание виртуальной машины"
1 Переходим по предложенной в задании ссылке https://app.vagrantup.com/bento/boxes/centos-7.5. 
    Находим на сайте ссылку для скачивания необходимого BOX-а, по имеющуюся у нас программу виртуализации и копируем ее https://app.vagrantup.com/bento/boxes/centos-7.5/versions/201811.25.0/providers/virtualbox.box
2 Инициализация vagrant # vagrant init https://app.vagrantup.com/bento/boxes/centos-7.5/versions/201811.25.0/providers/virtualbox.box
3 Создание и поднятие виртуальной машиены # vagrant up.
4 Наблюдение за выводом vagrant при создании виртуальной машины.
5 Проверка состояния виртуальной машины # vagrant status.
6 Останов виртуальной машины # vagrant halt.
7 Удаление виртуальной машины # vagrant destroy


Зададние №2

1 Редактируем Vagrantfile, прописывая в нем необходимые параметрами.
2 Запускаем ВМ # vagrant up.
3 Инсталируем E (nginx):
    3.1 Обновляем список репозиториев # sudo yum update
    3.2 Устанавливаем репозиторий, для того чтобы иметь все возможности последних версий # sudo yum install epel-release
    3.3 Устанавливаем NGINX # sudo yum install -y nginx
    3.4 Запускаем # sudo systemctl start nginx
    3.5 Добавляем в автозагрузку # sudo systemctl enable nginx
    3.6 Копируем одностраничный сайт-заглушку для проверки работоспособности # sudo cp -r ~/admin/ /usr/share/nginx/html/
    3.7 Создаем директорию для нашего будующего сайта # sudo mkdir /usr/share/nginx/html/php-test
    3.8 Настраиваем доступ к директории, изменяя владельца и группу # sudo chown vagrant:vagrant  /usr/share/nginx/html/php-test
    3.9 Создаем тестовый файл проверки работы php # sudo echo "<?php phpinfo(); ?>" > php-test.php  /usr/share/nginx/html/php-test/
4 Инсталируем M (MySQL):
5 Инсталируем P (php):
5.1 Инсталируем # sudo yum install php-fpm
5.2 Запускаем # sudo systemctl start php-fpm
5.3 Откройте конфигурационный файл php-fpm, который находится по адресу /etc/php-fpm.d/www.conf и посмотрите, на каком порту ожидает соединений запущенная служба. По умолчанию это 9000:

location ~ \.php$ {
try_files $uri =404;
fastcgi_pass 127.0.0.1:9000;
fastcgi_index index.php;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
fastcgi_param SCRIPT_NAME $fastcgi_script_name;
fastcgi_buffer_size 128k;
fastcgi_buffers 256 16k;
fastcgi_busy_buffers_size 256k;
fastcgi_temp_file_write_size 256k;
include fastcgi_params;
}